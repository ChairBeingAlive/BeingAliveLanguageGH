name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a release'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: windows-latest
    env:
      Solution_Name: BeingAliveLanguage.sln
      CSProj_Path: ./BeingAlivelanguage/BeingAliveLanguage.csproj
      Configuration: Release
      ARTIFACTS_DIR: artifacts/release

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.2.0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
         dotnet-version: 7.0.x

    - name: Restore NuGet packages
      run: nuget restore ${{ env.Solution_Name }}

    - name: Build C# Project 
      run: |
        $solutionPath = "${{ github.workspace }}\BeingAliveLanguage.sln"
        msbuild ${{ env.CSProj_Path }} `
          /p:Configuration=${{ env.Configuration }} `
          /p:Platform=AnyCPU `
          /p:SolutionDir="${{ github.workspace }}\" `
          /p:SolutionPath="$solutionPath"
      

    - name: Prepare Artifacts
      shell: pwsh
      run: |
        # Create artifacts directory
        New-Item -ItemType Directory -Path ${{ env.ARTIFACTS_DIR }} -Force
        
        # Copy entire bin directory
        Copy-Item -Path "${{ github.workspace }}\bin" -Destination ${{ env.ARTIFACTS_DIR }} -Recurse -Force
        
        # Run Yak packaging script
        $yakScriptPath = "${{ github.workspace }}\_release\prepare_yak_pkg.ps1"
        & "$yakScriptPath"
        
        # Copy Yak packages to artifacts
        Copy-Item -Path "${{ github.workspace }}\_release\*.yak" -Destination ${{ env.ARTIFACTS_DIR }} -Force

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-packages
        path: |
          ${{ env.ARTIFACTS_DIR }}/**/*.dll
          ${{ env.ARTIFACTS_DIR }}/**/*.gha
          ${{ env.ARTIFACTS_DIR }}/**/*.yak
          ${{ env.ARTIFACTS_DIR }}/bin/
        
    # Create GitHub Release
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.create_release == 'true'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/release/*
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

