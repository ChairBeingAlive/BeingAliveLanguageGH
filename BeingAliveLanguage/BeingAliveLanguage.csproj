<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Select the framework(s) you wish to target.
        Rhino 7: net48
        Rhino 8 Windows: net48, net7.0, net7.0-windows, net7.0-windows10.0.22000.0, etc
        Rhino 8 Mac: net7.0, net7.0-macos, net7.0-macos12.0, etc
	-->
		<TargetFrameworks>net7.0-windows;net7.0</TargetFrameworks>
		<EnableDynamicLoading>true</EnableDynamicLoading>
		<TargetExt>.gha</TargetExt>
		<NoWarn>NU1701;NETSDK1086</NoWarn>
		<EnableWindowsTargeting>true</EnableWindowsTargeting>
		<BaseOutputPath></BaseOutputPath>
	</PropertyGroup>

	<PropertyGroup>
		<!-- Specifies information for Assembly and Yak -->
		<Title>BeingAliveLanguage</Title>
		<Company>ETH Zurich</Company>
		<Authors>Dr. Zhao MA</Authors>
		<AutoGenerateBindingRedirects>False</AutoGenerateBindingRedirects>
		<Version>$(AssemblyVersion)</Version>
		<PackageProjectUrl>https://beingalivelanguage.arch.ethz.ch</PackageProjectUrl>
		<AssemblyVersion></AssemblyVersion>
		<PlatformTarget>AnyCPU</PlatformTarget>
		<Description>
</Description>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Grasshopper" Version="8.0.23304.9001" Condition="!$(TargetFramework.StartsWith('net4'))" ExcludeAssets="runtime" />
		<PackageReference Include="Clipper2" Version="1.4.0" />
		<PackageReference Include="KdTree" Version="1.4.1" />
		<PackageReference Include="MathNet.Numerics" Version="5.0.0" />
		<PackageReference Include="MIConvexHull" Version="1.1.19.1019" />
		<PackageReference Include="System.Resources.Extensions" Version="7.0.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\GeoSharPlusNET\GeoSharPlusNET.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Properties\Resources.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>Resources.resx</DependentUpon>
		</Compile>
		<Compile Update="Properties\Settings.Designer.cs">
			<DesignTimeSharedInput>True</DesignTimeSharedInput>
			<AutoGen>True</AutoGen>
			<DependentUpon>Settings.settings</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Update="Properties\Resources.resx">
			<Generator>PublicResXFileCodeGenerator</Generator>
			<LastGenOutput>Resources.Designer.cs</LastGenOutput>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
		<None Update="Properties\Settings.settings">
			<Generator>SettingsSingleFileGenerator</Generator>
			<LastGenOutput>Settings.Designer.cs</LastGenOutput>
		</None>
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
		<Optimize>false</Optimize>
		<OutputPath>bin\Debug\</OutputPath>
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<ErrorReport>prompt</ErrorReport>
		<WarningLevel>4</WarningLevel>
		<PlatformTarget>x64</PlatformTarget>
		<UseWinFormsOutOfProcDesigner>True</UseWinFormsOutOfProcDesigner>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<DebugType>pdbonly</DebugType>
		<Optimize>true</Optimize>
		<OutputPath>bin\Release\</OutputPath>
		<DefineConstants>TRACE</DefineConstants>
		<ErrorReport>prompt</ErrorReport>
		<WarningLevel>4</WarningLevel>
		<UseWinFormsOutOfProcDesigner>True</UseWinFormsOutOfProcDesigner>
	</PropertyGroup>


	<!-- For Windows only builds -->
	<PropertyGroup Condition="$(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4'))">
		<UseWindowsForms>true</UseWindowsForms>
	</PropertyGroup>

	<!-- Reference WinForms for .NET 7.0 on macOS -->
	<ItemGroup Condition="!($(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4')))">
		<!-- Rhino 8.11 and later you can use this -->
		<FrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms" />
	</ItemGroup>

	<Target Name="CopyPdbForMonoDebugging" AfterTargets="AfterBuild">
		<!-- Enable debugging in Rhino 6/7 on Mac -->
		<Copy SourceFiles="$(TargetDir)$(TargetName).pdb" DestinationFiles="$(TargetDir)$(TargetName).gha.pdb" Condition="$([MSBuild]::IsOSPlatform(OSX))and Exists('$(TargetDir)$(TargetName).pdb')" />
	</Target>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
	  <PropertyGroup>
		<!-- Remove any trailing backslashes using string replacement -->
		<_SafeTargetDir>$(TargetDir.TrimEnd('\'))</_SafeTargetDir>
		<_SafeSolutionDir>$(SolutionDir.TrimEnd('\'))</_SafeSolutionDir>
	  </PropertyGroup>
	  
	  <Exec Command="powershell -NonInteractive -ExecutionPolicy Bypass -Command &quot;&amp; '$(MSBuildThisFileDirectory)postbuild.ps1' -TargetDir '$(TargetDir)' -SolutionDir '$(SolutionDir)' -Configuration '$(Configuration)'&quot;" />
	</Target>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
	  <Exec Command="powershell -NonInteractive -ExecutionPolicy Bypass -Command &quot;&amp; '$(MSBuildThisFileDirectory)prebuild.ps1' -TargetDir '$(TargetDir)' -SourceDir '$(SolutionDir)GeoSharPlusCPP\build\' -Configuration '$(Configuration)'&quot;" />
	</Target>
</Project>